---
apiVersion: v1
kind: ConfigMap
metadata:
  name: q9
  labels:
    question.kontest.amsy.dev: "9"
data:
  question: |-
    永続化領域として確保されるVolumeが、PersistentVolumeです。
    NFSを使用してcndt-pvという名前のPersistentVolumeを作成し、NFSサーバのIPが192.168.9.8、容量が8Gi、アクセスモードがRXW、Reclaim PolicyがRetain、パスが/var/lib/cndtとなるように以下マニフェストファイルを変更してください。

    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: cndt-pv
      labels:
        type: local
    spec:
      storageClassName: cndt
  hint: |-
    https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  base_content.yaml: |-
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: cndt-pv
      labels:
        type: local
    spec:
      storageClassName: cndt
  answer.yaml: |-
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: cndt-pv
      labels:
        type: local
    spec:
      storageClassName: cndt
      capacity:
        storage: 8Gi
      accessModes:
        - ReadWriteMany
      persistentVolumeReclaimPolicy: Retain
      nfs:
        server: 192.168.9.8
        path: /var/lib/cndt
  comment: |-
    【解説 by カサレアル】 
    ■StorageClass
    - ストレージの分類（QoSレベル、バックアップポリシー、その他クラスター管理者が定義したポリシーなど）を示します。
    - 別途StorageClassのマニフェストを作成して定義する必要があります。
    - pv.spec.storageClassName には、StroageClassの metadata.name を指定します。
    ■容量
    - このPVが最低限持つべきデータ容量です。
    - spec.capacity.storage に指定します。
    ■アクセスモード
    - 複数ノードからのアクセス可否、読み書き可能/読み取りのみなどの設定です。
    - 下記の3種類があります。
        - ReadWriteMany(RWX、複数ノードから読み書き可能)
        - ReadWriteOnce(RWO、単一ノードからのみ読み書き可能)
        - ReadOnylMany(ROM、複数ノードから読み取りのみ可能)
    - spec.accessModes[] に指定します。
    ■Reclaim Policy
    - ボリュームが使い終わった後にどのように処理するかの設定です。
    - 下記の3種類があります。
        - Retain(ボリュームを保持)
        - Recycle(データを削除してボリューム自体は再利用、非推奨)
        - Delete(ボリュームを削除)
    - spec.persistentVolumeReclaimPolicy に指定します。
    ■NFS
    - NFSに関する設定をします。
    - spec.nfs に指定します。
        - server にNFSサーバーのIPアドレスを指定します。
        - path にNFSサーバーが公開しているパスを指定します。
  author: |-
    Yutaka Ichikawa (@cyberblack28)
